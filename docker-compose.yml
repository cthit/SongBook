version: "3"
networks:
  gamma:
  songbook:

services:
  songbook-frontend:
    build:
      context: ./frontend/
      dockerfile: dev.Dockerfile
    ports:
      - 3001:3000
    environment:
      REACT_APP_FRONTEND_URL: http://localhost:3001
      REACT_APP_GAMMA_FRONTEND_URL: http://localhost:3000
      REACT_APP_GAMMA_BACKEND_URL: http://localhost:8081/api
      REACT_APP_GAMMA_ADMIN_AUTHORITY: songbook
    volumes:
      - ./frontend:/usr/src/app
    networks:
      - songbook
#    depends_on:
#      - songbook-backend
#
#  songbook-backend:
#    depends_on:
#      - songbook-db
#    build:
#      context: ./backend/
#      dockerfile: dev.Dockerfile
#    environment:
#      SONGBOOK_POSTGRES_USER: songbook
#      SONGBOOK_POSTGRES_PASSWORD: password
#      SONGBOOK_POSTGRES_HOST: songbook-db
#      SONGBOOK_POSTGRES_PORT: 5432
#      SONGBOOK_POSTGRES_DB: postgres
#      SONGBOOK_SECRET_KEY: secret
#      INIT_DATA_PATH: setup/md/
#      RESOURCE_DATA_PATH: resource/
#      GAMMA_SECRET: secret
#      GAMMA_CLIENT_ID: id
#      GAMMA_REDIRECT_URI: http://localhost:3001/auth/account/callback
#      GAMMA_ME_URI: http://songbook_gamma-backend_1:8081/api/users/me
#      GAMMA_TOKEN_URI: http://songbook_gamma-backend_1:8081/api/oauth/token
#      GAMMA_AUTHORIZATION_URI: http://localhost:8081/api/oauth/authorize
#      GAMMA_ADMIN_AUTHORITY: songbook
#      PYTHONUNBUFFERED: 0
#    volumes:
#      - ./backend/:/usr/src/songbook/backend
#    networks:
#      - songbook
#      - gamma
#    ports:
#      - 5000:5000

  songbook-db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: songbook
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    ports:
      - 5432:5432 # Needed for script
    networks:
      - songbook

  adminer:
    image: adminer
    restart: always
    ports:
      - 8082:8080
    networks:
      - songbook
      - gamma

  gamma-frontend:
    image: cthit/gamma-frontend:development
    environment:
      HTTP_PROXY: http://gamma-backend:8081
    depends_on:
      - gamma-backend
    networks:
      - gamma
    ports:
      - 3000:3000

  gamma-backend:
    image: cthit/gamma-backend
    environment:
      # Default admin user name = admin
      # Default admin password  = password

      DB_USER: user
      DB_PASSWORD: password
      DB_HOST: gamma-db
      DB_PORT: 5432
      DB_NAME: postgres

      REDIS_HOST: gamma-redis
      REDIS_PASSWORD: ""
      REDIS_PORT: 6379

      GOTIFY_KEY: "123abc"
      GOTIFY_URL: http://gamma-gotify:8080/mail

      DEFAULT_CLIENT_NAME: demo
      DEFAULT_CLIENT_ID: id
      DEFAULT_CLIENT_SECRET: secret
      DEFAULT_REDIRECT_URI: http://localhost:3001/auth/account/callback

      SERVER_PORT: 8081
      SUCCESSFUL_LOGIN: http://localhost:3000
      CORS_ALLOWED_ORIGIN: http://localhost:3000
      BACKEND_URI: http://localhost:8081
      PRODUCTION: "false"
      COOKIE_DOMAIN: localhost
      IS_MOCKING_CLIENT: "true"

    depends_on:
      - gamma-redis
      - gamma-db
    networks:
      - gamma
    ports:
      - 8081:8081

  gamma-redis:
    image: redis:5.0
    networks:
      - gamma

  gamma-db:
    image: postgres:10
    environment:
      POSTGRES_USER: user
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: password
    networks:
      - gamma
